#include <iostream>
class Node{
public:
    int data;
    Node *next;
    Node(int data){
        this -> data = data;
        this -> next = NULL;
    }
};
Node* NextLargeNumber(Node *head) {
    /* Don't write main().
     * Don't read input, it is passed as function argument.
     * Return output and don't print it.
     * Taking input is handled automatically.
     */
    Node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    if(temp->data!=9){
        (temp->data)+=1;
        return head;
    }
    else{
        Node* temp2=head;
        int count=0;
        while(temp2->next->data!=9){
            count++;
            temp2=temp2->next;
        }
        if(count!=0){
            Node* temp3=temp2->next;
            while(temp3!=NULL){
                temp3->data=0;
                temp3=temp3->next;
            }
            (temp2->data)+=1;
            return head;
        }
        else{
            Node*temp3=temp2;
            while(temp3!=NULL){
                temp3->data=0;
                temp3=temp3->next;
            }
            Node* newNode=new Node(1);
            newNode->next=temp2;
            head=newNode;
            return head;
        }
    }
}

using namespace std;
#include "Solution.h"

Node* takeinput() {
    int data;
    cin >> data;
    Node* head = NULL, *tail = NULL;
    while(data != -1){
        Node *newNode = new Node(data);
        if(head == NULL)                  {
            head = newNode;
            tail = newNode;
        }
        else{
            tail -> next = newNode;
            tail = newNode;
        }
        cin >> data;
    }
    return head;
}

void print(Node *head) {
    Node *temp = head;
    while(temp != NULL) {
        cout << temp -> data << " ";
        temp = temp -> next;
    }
    cout<<endl;
}

int main() {
    Node *head = takeinput();
    
    head = NextLargeNumber(head);
    print(head);
    return 0;
}



