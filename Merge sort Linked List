Node *midPoint(Node *head)
{
	 if(head==NULL ){
        return head;
    }
    // Write your code here
	 Node* slow=head;
   	 Node* fast=head->next;
   	 while(fast!=NULL && fast->next!=NULL){
     	   slow=slow->next;
     	   fast=fast->next->next;
   	 }
    return slow;
}	  
Node *mergeTwoSortedLinkedLists(Node *head1, Node *head2)
{
    //Write your code here
    if(head1==NULL){
        return head2;
    }
    if(head2==NULL){
        return head1;
    }
    Node* fh=NULL;
    Node* ft=NULL;
    while(head1!=NULL && head2!=NULL){
        if(fh==NULL){
            if(head1->data<head2->data){
                fh=head1;
                ft=head1;
                head1=head1->next;
            }
            else{
                fh=head2;
                ft=head2;
                head2=head2->next;
            }
        }
        else{
            if(head1->data>head2->data){
                ft->next=head2;
                ft=ft->next;
                head2=head2->next;
            }
            else{
                ft->next=head1;
                ft=ft->next;
                head1=head1->next;
            }
        }
    }
    if(head1!=NULL){
        ft->next=head1;
    }
    else if(head2!=NULL){
        ft->next=head2;
    }
    return fh;
}
Node *mergeSort(Node *head)
{
	//Write your code here
    if(head==NULL || head->next==NULL){
        return head;
    }
    Node* mid=midPoint(head);
    Node* head2=mid->next;
    mid->next=NULL;
    Node* m1=mergeSort(head);
    Node* m2=mergeSort(head2);
    Node* m=mergeTwoSortedLinkedLists(m1,m2);
    return m;
}
