#include <iostream>
#include <stack>
using namespace std;

void reverseStack(stack<int> &input, stack<int> &extra) {
    //Write your code here
    if(input.empty()||input.size()==1)	//base case for recursion
        return;
    int temp=input.top();			          //saving the top element in a variable
    input.pop();
    reverseStack(input,extra);		      //using the inbuilt stack through recursion
    while(!input.empty()){			        //copying into the helper stack
        extra.push(input.top());
        input.pop();
    }
    input.push(temp);		                //first inserting the top element of the original input stack
    while(!extra.empty()){			        //Copying back to input stack from helper stack
        input.push(extra.top());
        extra.pop();
    }
}
int main() {
    stack<int> input, extra;
    int size;
    cin >> size;

    for (int i = 0, val; i < size; i++) {
        cin >> val;
        input.push(val);
    }

    reverseStack(input, extra);

    while (!input.empty()) {
        cout << input.top() << " ";
        input.pop();
    }
}
