#include <iostream>
using namespace std;
//stack implementation using Linked List
template <typename T>
class Node{
    Node* head;
    T data;
    public:
    Node(T element){
        head=NULL;
        data=element;
    }
}
template <typename T>
class StackLL{
    Node* head;
    int size;
    public:
    StackLL(){
        head=NULL;
        size=0;
    }
    int getSize(){
        return size;
    }
    bool isEmpty(){
        return size==0;
    }
    void Push(T element){
        Node<T>* newNode=new Node<T>(element);
        if(head==NULL){
            head=newNode;
            size++;
            return;
        }
        newNode->next=head;
        head=newNode;
        size++;
    }
    T top(){
        if(head==NULL){
            cout<<"Stack Empty"<<endl;
            return 0;
        }
        return head->data;
    }
    T pop(){
        if(head==NULL){
            cout<<"Stack Empty"<<endl;
            return 0;
        }
        T n=head->data;
        Node<T>* temp=head;
        head=head->next;
        delete temp;
        size--;
        return n;
    }
}
